{"ast":null,"code":"var _jsxFileName = \"/home/damazio/Desktop/web/react/star-wars/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress(prev => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n  useEffect(() => {\n    fetchMoviesHandler();\n  });\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Found no movies\");\n  if (movies.length > 0) content = /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 36\n    }\n  });\n  if (error) content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }\n  }, error);\n  if (isLoading) content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }\n  }, \"Loading \", loadingProgress);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","loadingProgress","setLoadingProgress","error","setError","loadAnimation","timer","setInterval","length","prev","concat","clearInterval","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content"],"sources":["/home/damazio/Desktop/web/react/star-wars/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress((prev) => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  });\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n\n  let content = <p>Found no movies</p>;\n\n  if (movies.length > 0) content = <MoviesList movies={movies} />;\n  if (error) content = <p>{error}</p>;\n  if (isLoading) content = <p>Loading {loadingProgress}</p>;\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMW,aAAa,GAAGZ,SAAS,CAAC,MAAM;IACpC,MAAMa,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,IAAIR,SAAS,IAAIE,eAAe,CAACO,MAAhB,GAAyB,CAA1C,EAA6C;QAC3CN,kBAAkB,CAAEO,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAY,GAAZ,CAAX,CAAlB;MACD;;MAED,IAAIX,SAAS,IAAIE,eAAe,CAACO,MAAhB,KAA2B,CAA5C,EAA+C;QAC7CN,kBAAkB,CAAC,EAAD,CAAlB;MACD;;MAED,IAAI,CAACH,SAAL,EAAgB;QACdG,kBAAkB,CAAC,EAAD,CAAlB;MACD;IACF,CAZwB,EAYtB,GAZsB,CAAzB;IAcA,OAAO,MAAM;MACXS,aAAa,CAACL,KAAD,CAAb;IACD,CAFD;EAGD,CAlB8B,EAkB5B,CAACL,eAAD,EAAkBF,SAAlB,CAlB4B,CAA/B;EAoBAN,SAAS,CAAC,MAAM;IACdmB,kBAAkB;EACnB,CAFQ,CAAT;;EAIA,eAAeA,kBAAf,GAAoC;IAClCZ,YAAY,CAAC,IAAD,CAAZ;;IACA,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;MACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MAEA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;QACxD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQA/B,SAAS,CAACqB,iBAAD,CAAT;IACD,CAjBD,CAiBE,OAAOhB,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAP,CAAR;IACD;;IACD9B,YAAY,CAAC,KAAD,CAAZ;EACD;;EAED,IAAI+B,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAAd;EAEA,IAAIlC,MAAM,CAACW,MAAP,GAAgB,CAApB,EAAuBuB,OAAO,gBAAG,oBAAC,UAAD;IAAY,MAAM,EAAElC,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAV;EACvB,IAAIM,KAAJ,EAAW4B,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI5B,KAAJ,CAAV;EACX,IAAIJ,SAAJ,EAAegC,OAAO,gBAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAY9B,eAAZ,CAAV;EAEf,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEW,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAUmB,OAAV,CAJF,CADF;AAQD;;AAED,eAAenC,GAAf"},"metadata":{},"sourceType":"module"}