{"ast":null,"code":"var _jsxFileName = \"/home/damazio/Desktop/web/react/star-wars/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress(prev => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 47\n    }\n  }, \"Found no movies.\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"Loading \", loadingProgress)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","loadingProgress","setLoadingProgress","error","setError","loadAnimation","timer","setInterval","length","prev","concat","clearInterval","fetchMoviesHandler","response","fetch","data","json","ok","Error","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message"],"sources":["/home/damazio/Desktop/web/react/star-wars/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress((prev) => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Found no movies.</p>}\n        {isLoading && <p>Loading {loadingProgress}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}