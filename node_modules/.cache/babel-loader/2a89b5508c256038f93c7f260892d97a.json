{"ast":null,"code":"var _jsxFileName = \"/home/damazio/Desktop/web/react/star-wars/src/App.js\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress(prev => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-5429a-default-rtdb.firebaseio.com/movies.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    fetch(\"https://react-http-5429a-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Found no movies\");\n  if (movies.length > 0) content = /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 36\n    }\n  });\n  if (error) content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }\n  }, error);\n  if (isLoading) content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }\n  }, \"Loading \", loadingProgress);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useCallback","useEffect","useState","AddMovie","MoviesList","App","movies","setMovies","isLoading","setIsLoading","loadingProgress","setLoadingProgress","error","setError","loadAnimation","timer","setInterval","length","prev","concat","clearInterval","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content"],"sources":["/home/damazio/Desktop/web/react/star-wars/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress((prev) => prev.concat(\".\"));\n      }\n\n      if (isLoading && loadingProgress.length === 3) {\n        setLoadingProgress(\"\");\n      }\n\n      if (!isLoading) {\n        setLoadingProgress(\"\");\n      }\n    }, 100);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [loadingProgress, isLoading]);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-5429a-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const transformedMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  function addMovieHandler(movie) {\n    fetch(\"https://react-http-5429a-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n  let content = <p>Found no movies</p>;\n\n  if (movies.length > 0) content = <MoviesList movies={movies} />;\n  if (error) content = <p>{error}</p>;\n  if (isLoading) content = <p>Loading {loadingProgress}</p>;\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}