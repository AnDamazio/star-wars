{"ast":null,"code":"var _jsxFileName = \"/home/damazio/Desktop/web/react/star-wars/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress(prev => prev.concat(\".\"));\n      }\n    }, 10);\n    return () => {\n      clearInterval(timer);\n      setLoadingProgress(\"\");\n    };\n  }, [loadingProgress, isLoading]);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Loading \", loadingProgress)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","loadingProgress","setLoadingProgress","loadAnimation","timer","setInterval","length","prev","concat","clearInterval","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date"],"sources":["/home/damazio/Desktop/web/react/star-wars/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState(\"\");\n\n  const loadAnimation = useEffect(() => {\n    const timer = setInterval(() => {\n      if (isLoading && loadingProgress.length < 3) {\n        setLoadingProgress((prev) => prev.concat(\".\"));\n      }\n    }, 10);\n\n    return () => {\n      clearInterval(timer);\n      setLoadingProgress(\"\")\n    };\n  }, [loadingProgress, isLoading]);\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films\");\n    const data = await response.json();\n\n    const transformedMovies = data.results.map((movieData) => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date,\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading {loadingProgress}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;EAEA,MAAMS,aAAa,GAAGV,SAAS,CAAC,MAAM;IACpC,MAAMW,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,IAAIN,SAAS,IAAIE,eAAe,CAACK,MAAhB,GAAyB,CAA1C,EAA6C;QAC3CJ,kBAAkB,CAAEK,IAAD,IAAUA,IAAI,CAACC,MAAL,CAAY,GAAZ,CAAX,CAAlB;MACD;IACF,CAJwB,EAItB,EAJsB,CAAzB;IAMA,OAAO,MAAM;MACXC,aAAa,CAACL,KAAD,CAAb;MACAF,kBAAkB,CAAC,EAAD,CAAlB;IACD,CAHD;EAID,CAX8B,EAW5B,CAACD,eAAD,EAAkBF,SAAlB,CAX4B,CAA/B;;EAaA,eAAeW,kBAAf,GAAoC;IAClCV,YAAY,CAAC,IAAD,CAAZ;IACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IAEA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;MACxD,OAAO;QACLC,EAAE,EAAED,SAAS,CAACE,UADT;QAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;QAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;QAILC,WAAW,EAAEN,SAAS,CAACO;MAJlB,CAAP;IAMD,CAPyB,CAA1B;IAQA3B,SAAS,CAACiB,iBAAD,CAAT;IACAf,YAAY,CAAC,KAAD,CAAZ;EACD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEU,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACX,SAAD,iBAAc,oBAAC,UAAD;IAAY,MAAM,EAAEF,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADjB,EAEGE,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eAAYE,eAAZ,CAFhB,CAJF,CADF;AAWD;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}